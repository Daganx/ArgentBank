{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Thunk for login\nexport const loginUser = createAsyncThunk('auth/loginUser', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post('http://localhost:3001/api/v1/user/login', credentials);\n    const {\n      token,\n      user\n    } = response.data.body;\n    localStorage.setItem('token', token); // Stockage du token\n    return user; // Assurez-vous que `user` est bien retourné\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// Thunk for fetchUserProfile\nexport const fetchUserProfile = createAsyncThunk(\"auth/fetchUserProfile\", async (_, {\n  getState,\n  rejectWithValue\n}) => {\n  const {\n    token\n  } = getState().auth;\n  try {\n    const response = await axios.post(\"http://localhost:3001/api/v1/user/profile\", {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// Thunk pour mettre à jour l'utilisateur\nexport const updateUser = createAsyncThunk(\"auth/updateUser\", async (userData, {\n  getState,\n  rejectWithValue\n}) => {\n  const state = getState();\n  const token = localStorage.getItem(\"token\"); // Récupération du token\n\n  if (!token) {\n    return rejectWithValue(\"No token found\");\n  }\n  try {\n    // Effectuer la mise à jour\n    await axios.put(\"http://localhost:3001/api/v1/user/profile\", userData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    // Récupérer les données mises à jour\n    const response = await axios.get(\"http://localhost:3001/api/v1/user/profile\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data.body; // Assurez-vous que la réponse contient les données mises à jour\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    token: localStorage.getItem(\"token\") || null,\n    status: \"idle\",\n    error: null\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.status = \"idle\";\n      state.error = null;\n      localStorage.removeItem(\"token\");\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.status = 'loading';\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.user = action.payload; // Assurez-vous que `action.payload` est bien défini\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }).addCase(fetchUserProfile.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchUserProfile.fulfilled, (state, action) => {\n      state.user = action.payload.body.user;\n      state.status = \"succeeded\";\n    }).addCase(fetchUserProfile.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n    }).addCase(updateUser.pending, state => {\n      state.status = \"loading\";\n    }).addCase(updateUser.fulfilled, (state, action) => {\n      state.user = action.payload; // Mettre à jour l'état avec les données mises à jour\n      state.status = \"succeeded\";\n    }).addCase(updateUser.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","loginUser","credentials","rejectWithValue","response","post","token","user","data","body","localStorage","setItem","error","fetchUserProfile","_","getState","auth","headers","Authorization","updateUser","userData","state","getItem","put","get","authSlice","name","initialState","status","reducers","logout","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/macbook/Documents/OpenClassRooms/Projet_13_Letot_Dagan/argentbank-front/src/Features/Auth/AuthSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Thunk for login\nexport const loginUser = createAsyncThunk(\n  'auth/loginUser',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/v1/user/login', credentials);\n      const { token, user } = response.data.body;\n      localStorage.setItem('token', token); // Stockage du token\n      return user; // Assurez-vous que `user` est bien retourné\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\n// Thunk for fetchUserProfile\nexport const fetchUserProfile = createAsyncThunk(\n  \"auth/fetchUserProfile\",\n  async (_, { getState, rejectWithValue }) => {\n    const { token } = getState().auth;\n    try {\n      const response = await axios.post(\"http://localhost:3001/api/v1/user/profile\", {}, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\n// Thunk pour mettre à jour l'utilisateur\nexport const updateUser = createAsyncThunk(\n  \"auth/updateUser\",\n  async (userData, { getState, rejectWithValue }) => {\n    const state = getState();\n    const token = localStorage.getItem(\"token\"); // Récupération du token\n\n    if (!token) {\n      return rejectWithValue(\"No token found\");\n    }\n\n    try {\n      // Effectuer la mise à jour\n      await axios.put(\"http://localhost:3001/api/v1/user/profile\", userData, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      // Récupérer les données mises à jour\n      const response = await axios.get(\"http://localhost:3001/api/v1/user/profile\", {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      return response.data.body; // Assurez-vous que la réponse contient les données mises à jour\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    token: localStorage.getItem(\"token\") || null,\n    status: \"idle\",\n    error: null,\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.status = \"idle\";\n      state.error = null;\n      localStorage.removeItem(\"token\");\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n    .addCase(loginUser.pending, (state) => {\n      state.status = 'loading';\n    })\n    .addCase(loginUser.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.user = action.payload; // Assurez-vous que `action.payload` est bien défini\n    })\n    .addCase(loginUser.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    })\n      .addCase(fetchUserProfile.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchUserProfile.fulfilled, (state, action) => {\n        state.user = action.payload.body.user;\n        state.status = \"succeeded\";\n      })\n      .addCase(fetchUserProfile.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.payload;\n      })\n      .addCase(updateUser.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(updateUser.fulfilled, (state, action) => {\n        state.user = action.payload; // Mettre à jour l'état avec les données mises à jour\n        state.status = \"succeeded\";\n      })\n      .addCase(updateUser.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { logout } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}