{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Thunk pour la connexion utilisateur\nexport const loginUser = createAsyncThunk(\"auth/loginUser\", async (userData, {\n  rejectWithValue\n}) => {\n  console.log(\"User data sent to API:\", userData);\n  try {\n    const response = await axios.post(\"http://localhost:3001/api/v1/user/login\", userData);\n    console.log(\"Response from login API:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error in loginUser thunk:\", error.response.data);\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// Thunk pour récupérer les données utilisateur\nexport const fetchUserProfile = createAsyncThunk(\"auth/fetchUserProfile\", async (_, {\n  getState,\n  rejectWithValue\n}) => {\n  const {\n    token\n  } = getState().auth;\n  console.log(\"Fetching user profile with token:\", token); // Vérifier le token\n  try {\n    const response = await axios.get(\"http://localhost:3001/api/v1/user/profile\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(\"Response from fetchUserProfile API:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error in fetchUserProfile thunk:\", error.response.data);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    token: null,\n    status: \"idle\",\n    error: null\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.status = \"idle\";\n      state.error = null;\n\n      // Supprimer le token de localStorage\n      localStorage.removeItem(\"token\");\n      console.log(\"User logged out. State reset to initial values.\");\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Gestion de l'état de la requête de connexion\n    .addCase(loginUser.pending, state => {\n      state.status = \"loading\";\n      console.log(\"Login request pending...\");\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      console.log(\"Full response payload:\", action.payload);\n      state.status = \"succeeded\";\n      // Vérifie que les données existent et sont bien structurées\n      if (action.payload.body) {\n        state.user = action.payload.body.user;\n        state.token = action.payload.body.token;\n\n        // Stocker le token dans localStorage\n        localStorage.setItem(\"token\", state.token);\n        console.log(\"Login succeeded. User data:\", state.user);\n        console.log(\"Token received:\", state.token);\n      } else {\n        console.error(\"Unexpected response structure:\", action.payload);\n      }\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n      // Réinitialiser user et token en cas d'échec\n      state.user = null;\n      state.token = null;\n      console.error(\"Login failed with error:\", state.error);\n    })\n    // Gestion de l'état de la requête de récupération du profil utilisateur\n    .addCase(fetchUserProfile.pending, state => {\n      state.status = \"loading\";\n      console.log(\"Fetch user profile request pending...\");\n    }).addCase(fetchUserProfile.fulfilled, (state, action) => {\n      console.log(\"Full response payload from profile fetch:\", action.payload);\n      state.status = \"succeeded\";\n      // Vérifie que les données existent et sont bien structurées\n      if (action.payload.body) {\n        state.user = action.payload.body.user;\n        console.log(\"User profile fetched successfully. User data:\", state.user);\n      } else {\n        console.error(\"Unexpected response structure:\", action.payload);\n      }\n    }).addCase(fetchUserProfile.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n      console.error(\"Failed to fetch user profile with error:\", state.error);\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","loginUser","userData","rejectWithValue","console","log","response","post","data","error","fetchUserProfile","_","getState","token","auth","get","headers","Authorization","authSlice","name","initialState","user","status","reducers","logout","state","localStorage","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","body","setItem","rejected","actions","reducer"],"sources":["/Users/macbook/Documents/OpenClassRooms/Projet_13_Letot_Dagan/argentbank-front/src/Features/Auth/AuthSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Thunk pour la connexion utilisateur\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (userData, { rejectWithValue }) => {\n    console.log(\"User data sent to API:\", userData);\n    try {\n      const response = await axios.post(\n        \"http://localhost:3001/api/v1/user/login\",\n        userData\n      );\n      console.log(\"Response from login API:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error in loginUser thunk:\", error.response.data);\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\n// Thunk pour récupérer les données utilisateur\nexport const fetchUserProfile = createAsyncThunk(\n  \"auth/fetchUserProfile\",\n  async (_, { getState, rejectWithValue }) => {\n    const { token } = getState().auth;\n    console.log(\"Fetching user profile with token:\", token); // Vérifier le token\n    try {\n      const response = await axios.get(\n        \"http://localhost:3001/api/v1/user/profile\",\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      console.log(\"Response from fetchUserProfile API:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error in fetchUserProfile thunk:\", error.response.data);\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    token: null,\n    status: \"idle\",\n    error: null,\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.status = \"idle\";\n      state.error = null;\n  \n      // Supprimer le token de localStorage\n      localStorage.removeItem(\"token\");\n  \n      console.log(\"User logged out. State reset to initial values.\");\n    },\n  },\n  \n  extraReducers: (builder) => {\n    builder\n      // Gestion de l'état de la requête de connexion\n      .addCase(loginUser.pending, (state) => {\n        state.status = \"loading\";\n        console.log(\"Login request pending...\");\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        console.log(\"Full response payload:\", action.payload);\n        state.status = \"succeeded\";\n        // Vérifie que les données existent et sont bien structurées\n        if (action.payload.body) {\n          state.user = action.payload.body.user;\n          state.token = action.payload.body.token;\n          \n          // Stocker le token dans localStorage\n          localStorage.setItem(\"token\", state.token);\n\n          console.log(\"Login succeeded. User data:\", state.user);\n          console.log(\"Token received:\", state.token);\n        } else {\n          console.error(\"Unexpected response structure:\", action.payload);\n        }\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.payload;\n        // Réinitialiser user et token en cas d'échec\n        state.user = null;\n        state.token = null;\n        console.error(\"Login failed with error:\", state.error);\n      })\n      // Gestion de l'état de la requête de récupération du profil utilisateur\n      .addCase(fetchUserProfile.pending, (state) => {\n        state.status = \"loading\";\n        console.log(\"Fetch user profile request pending...\");\n      })\n      .addCase(fetchUserProfile.fulfilled, (state, action) => {\n        console.log(\"Full response payload from profile fetch:\", action.payload);\n        state.status = \"succeeded\";\n        // Vérifie que les données existent et sont bien structurées\n        if (action.payload.body) {\n          state.user = action.payload.body.user;\n          console.log(\"User profile fetched successfully. User data:\", state.user);\n        } else {\n          console.error(\"Unexpected response structure:\", action.payload);\n        }\n      })\n      .addCase(fetchUserProfile.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.payload;\n        console.error(\"Failed to fetch user profile with error:\", state.error);\n      });\n  },\n});\n\nexport const { logout } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}