{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Action pour connecter l'utilisateur\nexport const loginUser = createAsyncThunk('auth/loginUser', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post('http://localhost:3001/api/v1/user/login', userData);\n    console.log(\"Response from API:\", response.data); // Affiche la réponse de l'API\n    return response.data;\n  } catch (error) {\n    console.error(\"Error in loginUser thunk:\", error.response.data);\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// Action pour récupérer le profil utilisateur\nexport const fetchUserProfile = createAsyncThunk('auth/fetchUserProfile', async (_, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const token = getState().auth.token;\n    const response = await axios.post('http://localhost:3001/api/v1/user/profile', {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data.body; // Assure-toi que `body` contient les informations utilisateur\n  } catch (error) {\n    console.error('Error fetching user profile:', error.response.data);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    token: null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.status = 'idle';\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.status = 'loading';\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      console.log(\"Token JWT:\", state.token);\n      console.log(\"User:\", state.user);\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }).addCase(fetchUserProfile.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchUserProfile.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.user = action.payload;\n    }).addCase(fetchUserProfile.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","loginUser","userData","rejectWithValue","response","post","console","log","data","error","fetchUserProfile","_","getState","token","auth","headers","Authorization","body","authSlice","name","initialState","user","status","reducers","logout","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/macbook/Documents/OpenClassRooms/Projet_13_Letot_Dagan/argentbank-front/src/Features/Auth/AuthSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Action pour connecter l'utilisateur\nexport const loginUser = createAsyncThunk(\n  'auth/loginUser',\n  async (userData, { rejectWithValue }) => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/v1/user/login', userData);\n      console.log(\"Response from API:\", response.data); // Affiche la réponse de l'API\n      return response.data;\n    } catch (error) {\n      console.error(\"Error in loginUser thunk:\", error.response.data);\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\n// Action pour récupérer le profil utilisateur\nexport const fetchUserProfile = createAsyncThunk(\n  'auth/fetchUserProfile',\n  async (_, { getState, rejectWithValue }) => {\n    try {\n      const token = getState().auth.token;\n      const response = await axios.post('http://localhost:3001/api/v1/user/profile', {}, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      return response.data.body; // Assure-toi que `body` contient les informations utilisateur\n    } catch (error) {\n      console.error('Error fetching user profile:', error.response.data);\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    token: null,\n    status: 'idle',\n    error: null,\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.status = 'idle';\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loginUser.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        console.log(\"Token JWT:\", state.token);\n        console.log(\"User:\", state.user);\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n      })\n      .addCase(fetchUserProfile.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchUserProfile.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.user = action.payload;\n      })\n      .addCase(fetchUserProfile.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { logout } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}