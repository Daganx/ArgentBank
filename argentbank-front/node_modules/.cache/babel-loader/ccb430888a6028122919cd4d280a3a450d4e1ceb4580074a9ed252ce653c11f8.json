{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Thunk pour la connexion\nexport const loginUser = createAsyncThunk('auth/loginUser', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post('http://localhost:3001/api/v1/login', credentials);\n    const {\n      token\n    } = response.data;\n\n    // Stocker le token dans le localStorage\n    localStorage.setItem('token', token);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error('Error in loginUser thunk:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n    return rejectWithValue((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  }\n});\n\n// Thunk pour récupérer le profil utilisateur\nexport const fetchUserProfile = createAsyncThunk('auth/fetchUserProfile', async (_, {\n  rejectWithValue\n}) => {\n  const token = localStorage.getItem('token'); // Récupérer le token du localStorage\n\n  if (!token) {\n    return rejectWithValue({\n      message: 'Token is missing'\n    });\n  }\n  try {\n    const response = await axios.post('http://localhost:3001/api/v1/user/profile', {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response4;\n    console.error('Error in fetchUserProfile thunk:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n    return rejectWithValue((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data);\n  }\n});\n\n// Thunk pour la déconnexion\nexport const logoutUser = createAsyncThunk('auth/logoutUser', async (_, {\n  dispatch\n}) => {\n  try {\n    // Optionnel : appeler une API pour invalider la session côté serveur\n    await axios.post('http://localhost:3001/api/v1/logout');\n\n    // Supprimer le token du localStorage\n    localStorage.removeItem('token');\n  } catch (error) {\n    var _error$response5;\n    console.error('Error in logoutUser thunk:', (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data);\n  }\n\n  // Réinitialiser le state ou effectuer d'autres actions nécessaires après la déconnexion\n  dispatch(authSlice.actions.logout()); // Assurez-vous que vous avez un action logout dans votre slice\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    token: localStorage.getItem('authToken') || null,\n    // Charger le token stocké\n    status: \"idle\",\n    error: null\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.status = \"idle\";\n      state.error = null;\n      localStorage.removeItem('authToken'); // Supprimer le token lors de la déconnexion\n      console.log(\"User logged out. State reset to initial values.\");\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Gestion de l'état de la requête de connexion\n    .addCase(loginUser.pending, state => {\n      state.status = \"loading\";\n      console.log(\"Login request pending...\");\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      console.log(\"Full response payload:\", action.payload);\n      state.status = \"succeeded\";\n      // Vérifie que les données existent et sont bien structurées\n      if (action.payload.body) {\n        state.user = action.payload.body.user;\n        state.token = action.payload.body.token;\n        console.log(\"Login succeeded. User data:\", state.user);\n        console.log(\"Token received:\", state.token);\n      } else {\n        console.error(\"Unexpected response structure:\", action.payload);\n      }\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n      // Réinitialiser user et token en cas d'échec\n      state.user = null;\n      state.token = null;\n      console.error(\"Login failed with error:\", state.error);\n    })\n    // Gestion de l'état de la requête de récupération du profil utilisateur\n    .addCase(fetchUserProfile.pending, state => {\n      state.status = \"loading\";\n      console.log(\"Fetch user profile request pending...\");\n    }).addCase(fetchUserProfile.fulfilled, (state, action) => {\n      console.log(\"Full response payload from profile fetch:\", action.payload);\n      state.status = \"succeeded\";\n      // Vérifie que les données existent et sont bien structurées\n      if (action.payload.body) {\n        state.user = action.payload.body.user;\n        console.log(\"User profile fetched successfully. User data:\", state.user);\n      } else {\n        console.error(\"Unexpected response structure:\", action.payload);\n      }\n    }).addCase(fetchUserProfile.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n      console.error(\"Failed to fetch user profile with error:\", state.error);\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","loginUser","credentials","rejectWithValue","response","post","token","data","localStorage","setItem","error","_error$response","_error$response2","console","fetchUserProfile","_","getItem","message","headers","Authorization","_error$response3","_error$response4","logoutUser","dispatch","removeItem","_error$response5","authSlice","actions","logout","name","initialState","user","status","reducers","state","log","extraReducers","builder","addCase","pending","fulfilled","action","payload","body","rejected","reducer"],"sources":["/Users/macbook/Documents/OpenClassRooms/Projet_13_Letot_Dagan/argentbank-front/src/Features/Auth/AuthSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Thunk pour la connexion\nexport const loginUser = createAsyncThunk(\n  'auth/loginUser',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/v1/login', credentials);\n      const { token } = response.data;\n\n      // Stocker le token dans le localStorage\n      localStorage.setItem('token', token);\n\n      return response.data;\n    } catch (error) {\n      console.error('Error in loginUser thunk:', error.response?.data);\n      return rejectWithValue(error.response?.data);\n    }\n  }\n);\n\n\n// Thunk pour récupérer le profil utilisateur\nexport const fetchUserProfile = createAsyncThunk(\n  'auth/fetchUserProfile',\n  async (_, { rejectWithValue }) => {\n    const token = localStorage.getItem('token'); // Récupérer le token du localStorage\n\n    if (!token) {\n      return rejectWithValue({ message: 'Token is missing' });\n    }\n\n    try {\n      const response = await axios.post(\n        'http://localhost:3001/api/v1/user/profile',\n        {},\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      console.error('Error in fetchUserProfile thunk:', error.response?.data);\n      return rejectWithValue(error.response?.data);\n    }\n  }\n);\n\n// Thunk pour la déconnexion\nexport const logoutUser = createAsyncThunk(\n  'auth/logoutUser',\n  async (_, { dispatch }) => {\n    try {\n      // Optionnel : appeler une API pour invalider la session côté serveur\n      await axios.post('http://localhost:3001/api/v1/logout');\n\n      // Supprimer le token du localStorage\n      localStorage.removeItem('token');\n    } catch (error) {\n      console.error('Error in logoutUser thunk:', error.response?.data);\n    }\n\n    // Réinitialiser le state ou effectuer d'autres actions nécessaires après la déconnexion\n    dispatch(authSlice.actions.logout()); // Assurez-vous que vous avez un action logout dans votre slice\n  }\n);\n\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    token: localStorage.getItem('authToken') || null, // Charger le token stocké\n    status: \"idle\",\n    error: null,\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.status = \"idle\";\n      state.error = null;\n      localStorage.removeItem('authToken'); // Supprimer le token lors de la déconnexion\n      console.log(\"User logged out. State reset to initial values.\");\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Gestion de l'état de la requête de connexion\n      .addCase(loginUser.pending, (state) => {\n        state.status = \"loading\";\n        console.log(\"Login request pending...\");\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        console.log(\"Full response payload:\", action.payload);\n        state.status = \"succeeded\";\n        // Vérifie que les données existent et sont bien structurées\n        if (action.payload.body) {\n          state.user = action.payload.body.user;\n          state.token = action.payload.body.token;\n          console.log(\"Login succeeded. User data:\", state.user);\n          console.log(\"Token received:\", state.token);\n        } else {\n          console.error(\"Unexpected response structure:\", action.payload);\n        }\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.payload;\n        // Réinitialiser user et token en cas d'échec\n        state.user = null;\n        state.token = null;\n        console.error(\"Login failed with error:\", state.error);\n      })\n      // Gestion de l'état de la requête de récupération du profil utilisateur\n      .addCase(fetchUserProfile.pending, (state) => {\n        state.status = \"loading\";\n        console.log(\"Fetch user profile request pending...\");\n      })\n      .addCase(fetchUserProfile.fulfilled, (state, action) => {\n        console.log(\n          \"Full response payload from profile fetch:\",\n          action.payload\n        );\n        state.status = \"succeeded\";\n        // Vérifie que les données existent et sont bien structurées\n        if (action.payload.body) {\n          state.user = action.payload.body.user;\n          console.log(\n            \"User profile fetched successfully. User data:\",\n            state.user\n          );\n        } else {\n          console.error(\"Unexpected response structure:\", action.payload);\n        }\n      })\n      .addCase(fetchUserProfile.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.payload;\n        console.error(\"Failed to fetch user profile with error:\", state.error);\n      });\n  },\n});\n\nexport const { logout } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}