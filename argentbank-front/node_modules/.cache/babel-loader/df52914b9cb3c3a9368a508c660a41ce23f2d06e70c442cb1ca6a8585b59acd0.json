{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Thunk pour la connexion utilisateur\nexport const loginUser = createAsyncThunk(\"auth/loginUser\", async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(\"http://localhost:3001/api/v1/user/login\", userData);\n    // Sauvegarder le token dans localStorage\n    localStorage.setItem('token', response.data.body.token);\n    console.log(\"Token stored in localStorage:\", localStorage.getItem('token'));\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// Thunk pour récupérer les données utilisateur\nexport const fetchUserProfile = createAsyncThunk(\"auth/fetchUserProfile\", async (_, {\n  getState,\n  rejectWithValue\n}) => {\n  const {\n    token\n  } = getState().auth;\n  console.log(\"Fetching user profile with token:\", token); // Vérifier le token\n  try {\n    const response = await axios.post(\"http://localhost:3001/api/v1/user/profile\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(\"Response from fetchUserProfile API:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error in fetchUserProfile thunk:\", error.response.data);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    token: localStorage.getItem('token') || null,\n    // Charger le token depuis localStorage\n    status: \"idle\",\n    error: null\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.status = \"idle\";\n      state.error = null;\n      localStorage.removeItem('token'); // Supprimer le token lors de la déconnexion\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Gestion de l'état de la requête de connexion\n    .addCase(loginUser.pending, state => {\n      state.status = \"loading\";\n      console.log(\"Login request pending...\");\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      console.log(\"Full response payload:\", action.payload);\n      state.status = \"succeeded\";\n      // Vérifie que les données existent et sont bien structurées\n      if (action.payload.body) {\n        state.user = action.payload.body.user;\n        state.token = action.payload.body.token;\n        console.log(\"Login succeeded. User data:\", state.user);\n        console.log(\"Token received:\", state.token);\n      } else {\n        console.error(\"Unexpected response structure:\", action.payload);\n      }\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n      // Réinitialiser user et token en cas d'échec\n      state.user = null;\n      state.token = null;\n      console.error(\"Login failed with error:\", state.error);\n    })\n    // Gestion de l'état de la requête de récupération du profil utilisateur\n    .addCase(fetchUserProfile.pending, state => {\n      state.status = \"loading\";\n      console.log(\"Fetch user profile request pending...\");\n    }).addCase(fetchUserProfile.fulfilled, (state, action) => {\n      console.log(\"Full response payload from profile fetch:\", action.payload);\n      state.status = \"succeeded\";\n      // Vérifie que les données existent et sont bien structurées\n      if (action.payload.body) {\n        state.user = action.payload.body.user;\n        console.log(\"User profile fetched successfully. User data:\", state.user);\n      } else {\n        console.error(\"Unexpected response structure:\", action.payload);\n      }\n    }).addCase(fetchUserProfile.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n      console.error(\"Failed to fetch user profile with error:\", state.error);\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","loginUser","userData","rejectWithValue","response","post","localStorage","setItem","data","body","token","console","log","getItem","error","fetchUserProfile","_","getState","auth","headers","Authorization","authSlice","name","initialState","user","status","reducers","logout","state","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/macbook/Documents/OpenClassRooms/Projet_13_Letot_Dagan/argentbank-front/src/Features/Auth/AuthSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Thunk pour la connexion utilisateur\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (userData, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(\n        \"http://localhost:3001/api/v1/user/login\",\n        userData\n      );\n      // Sauvegarder le token dans localStorage\n      localStorage.setItem('token', response.data.body.token);\n      console.log(\"Token stored in localStorage:\", localStorage.getItem('token'));\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\n\n// Thunk pour récupérer les données utilisateur\nexport const fetchUserProfile = createAsyncThunk(\n  \"auth/fetchUserProfile\",\n  async (_, { getState, rejectWithValue }) => {\n    const { token } = getState().auth;\n    console.log(\"Fetching user profile with token:\", token); // Vérifier le token\n    try {\n      const response = await axios.post(\n        \"http://localhost:3001/api/v1/user/profile\",\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      console.log(\"Response from fetchUserProfile API:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error in fetchUserProfile thunk:\", error.response.data);\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    token: localStorage.getItem('token') || null, // Charger le token depuis localStorage\n    status: \"idle\",\n    error: null,\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.status = \"idle\";\n      state.error = null;\n      localStorage.removeItem('token'); // Supprimer le token lors de la déconnexion\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Gestion de l'état de la requête de connexion\n      .addCase(loginUser.pending, (state) => {\n        state.status = \"loading\";\n        console.log(\"Login request pending...\");\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        console.log(\"Full response payload:\", action.payload);\n        state.status = \"succeeded\";\n        // Vérifie que les données existent et sont bien structurées\n        if (action.payload.body) {\n          state.user = action.payload.body.user;\n          state.token = action.payload.body.token;\n          console.log(\"Login succeeded. User data:\", state.user);\n          console.log(\"Token received:\", state.token);\n        } else {\n          console.error(\"Unexpected response structure:\", action.payload);\n        }\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.payload;\n        // Réinitialiser user et token en cas d'échec\n        state.user = null;\n        state.token = null;\n        console.error(\"Login failed with error:\", state.error);\n      })\n      // Gestion de l'état de la requête de récupération du profil utilisateur\n      .addCase(fetchUserProfile.pending, (state) => {\n        state.status = \"loading\";\n        console.log(\"Fetch user profile request pending...\");\n      })\n      .addCase(fetchUserProfile.fulfilled, (state, action) => {\n        console.log(\n          \"Full response payload from profile fetch:\",\n          action.payload\n        );\n        state.status = \"succeeded\";\n        // Vérifie que les données existent et sont bien structurées\n        if (action.payload.body) {\n          state.user = action.payload.body.user;\n          console.log(\n            \"User profile fetched successfully. User data:\",\n            state.user\n          );\n        } else {\n          console.error(\"Unexpected response structure:\", action.payload);\n        }\n      })\n      .addCase(fetchUserProfile.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.payload;\n        console.error(\"Failed to fetch user profile with error:\", state.error);\n      });\n  },\n});\n\nexport const { logout } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}