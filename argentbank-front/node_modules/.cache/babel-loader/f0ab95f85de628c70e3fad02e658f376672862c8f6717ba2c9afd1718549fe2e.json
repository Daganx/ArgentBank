{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Thunk pour la connexion\nexport const loginUser = createAsyncThunk('auth/loginUser', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post('http://localhost:3001/api/v1/login', credentials);\n    const {\n      token\n    } = response.data;\n\n    // Stocker le token dans le localStorage\n    localStorage.setItem('token', token);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error('Error in loginUser thunk:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n    return rejectWithValue((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  }\n});\n\n// Thunk pour récupérer le profil utilisateur\nexport const fetchUserProfile = createAsyncThunk('auth/fetchUserProfile', async (_, {\n  rejectWithValue\n}) => {\n  const token = localStorage.getItem('token'); // Récupérer le token du localStorage\n\n  if (!token) {\n    return rejectWithValue({\n      message: 'Token is missing'\n    });\n  }\n  try {\n    const response = await axios.post('http://localhost:3001/api/v1/user/profile', {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response4;\n    console.error('Error in fetchUserProfile thunk:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n    return rejectWithValue((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data);\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    token: localStorage.getItem('authToken') || null,\n    // Charger le token stocké\n    status: \"idle\",\n    error: null\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.status = \"idle\";\n      state.error = null;\n      localStorage.removeItem('authToken'); // Supprimer le token lors de la déconnexion\n      console.log(\"User logged out. State reset to initial values.\");\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Gestion de l'état de la requête de connexion\n    .addCase(loginUser.pending, state => {\n      state.status = \"loading\";\n      console.log(\"Login request pending...\");\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      console.log(\"Full response payload:\", action.payload);\n      state.status = \"succeeded\";\n      // Vérifie que les données existent et sont bien structurées\n      if (action.payload.body) {\n        state.user = action.payload.body.user;\n        state.token = action.payload.body.token;\n        console.log(\"Login succeeded. User data:\", state.user);\n        console.log(\"Token received:\", state.token);\n      } else {\n        console.error(\"Unexpected response structure:\", action.payload);\n      }\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n      // Réinitialiser user et token en cas d'échec\n      state.user = null;\n      state.token = null;\n      console.error(\"Login failed with error:\", state.error);\n    })\n    // Gestion de l'état de la requête de récupération du profil utilisateur\n    .addCase(fetchUserProfile.pending, state => {\n      state.status = \"loading\";\n      console.log(\"Fetch user profile request pending...\");\n    }).addCase(fetchUserProfile.fulfilled, (state, action) => {\n      console.log(\"Full response payload from profile fetch:\", action.payload);\n      state.status = \"succeeded\";\n      // Vérifie que les données existent et sont bien structurées\n      if (action.payload.body) {\n        state.user = action.payload.body.user;\n        console.log(\"User profile fetched successfully. User data:\", state.user);\n      } else {\n        console.error(\"Unexpected response structure:\", action.payload);\n      }\n    }).addCase(fetchUserProfile.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n      console.error(\"Failed to fetch user profile with error:\", state.error);\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","loginUser","credentials","rejectWithValue","response","post","token","data","localStorage","setItem","error","_error$response","_error$response2","console","fetchUserProfile","_","getItem","message","headers","Authorization","_error$response3","_error$response4","authSlice","name","initialState","user","status","reducers","logout","state","removeItem","log","extraReducers","builder","addCase","pending","fulfilled","action","payload","body","rejected","actions","reducer"],"sources":["/Users/macbook/Documents/OpenClassRooms/Projet_13_Letot_Dagan/argentbank-front/src/Features/Auth/AuthSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Thunk pour la connexion\nexport const loginUser = createAsyncThunk(\n  'auth/loginUser',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/v1/login', credentials);\n      const { token } = response.data;\n\n      // Stocker le token dans le localStorage\n      localStorage.setItem('token', token);\n\n      return response.data;\n    } catch (error) {\n      console.error('Error in loginUser thunk:', error.response?.data);\n      return rejectWithValue(error.response?.data);\n    }\n  }\n);\n\n\n// Thunk pour récupérer le profil utilisateur\nexport const fetchUserProfile = createAsyncThunk(\n  'auth/fetchUserProfile',\n  async (_, { rejectWithValue }) => {\n    const token = localStorage.getItem('token'); // Récupérer le token du localStorage\n\n    if (!token) {\n      return rejectWithValue({ message: 'Token is missing' });\n    }\n\n    try {\n      const response = await axios.post(\n        'http://localhost:3001/api/v1/user/profile',\n        {},\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      console.error('Error in fetchUserProfile thunk:', error.response?.data);\n      return rejectWithValue(error.response?.data);\n    }\n  }\n);\n\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    token: localStorage.getItem('authToken') || null, // Charger le token stocké\n    status: \"idle\",\n    error: null,\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.status = \"idle\";\n      state.error = null;\n      localStorage.removeItem('authToken'); // Supprimer le token lors de la déconnexion\n      console.log(\"User logged out. State reset to initial values.\");\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Gestion de l'état de la requête de connexion\n      .addCase(loginUser.pending, (state) => {\n        state.status = \"loading\";\n        console.log(\"Login request pending...\");\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        console.log(\"Full response payload:\", action.payload);\n        state.status = \"succeeded\";\n        // Vérifie que les données existent et sont bien structurées\n        if (action.payload.body) {\n          state.user = action.payload.body.user;\n          state.token = action.payload.body.token;\n          console.log(\"Login succeeded. User data:\", state.user);\n          console.log(\"Token received:\", state.token);\n        } else {\n          console.error(\"Unexpected response structure:\", action.payload);\n        }\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.payload;\n        // Réinitialiser user et token en cas d'échec\n        state.user = null;\n        state.token = null;\n        console.error(\"Login failed with error:\", state.error);\n      })\n      // Gestion de l'état de la requête de récupération du profil utilisateur\n      .addCase(fetchUserProfile.pending, (state) => {\n        state.status = \"loading\";\n        console.log(\"Fetch user profile request pending...\");\n      })\n      .addCase(fetchUserProfile.fulfilled, (state, action) => {\n        console.log(\n          \"Full response payload from profile fetch:\",\n          action.payload\n        );\n        state.status = \"succeeded\";\n        // Vérifie que les données existent et sont bien structurées\n        if (action.payload.body) {\n          state.user = action.payload.body.user;\n          console.log(\n            \"User profile fetched successfully. User data:\",\n            state.user\n          );\n        } else {\n          console.error(\"Unexpected response structure:\", action.payload);\n        }\n      })\n      .addCase(fetchUserProfile.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.payload;\n        console.error(\"Failed to fetch user profile with error:\", state.error);\n      });\n  },\n});\n\nexport const { logout } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}