{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Thunk pour la connexion utilisateur\nexport const loginUser = createAsyncThunk(\"auth/loginUser\", async (userData, {\n  rejectWithValue\n}) => {\n  console.log(\"User data sent to API:\", userData);\n  try {\n    const response = await axios.post(\"http://localhost:3001/api/v1/user/login\", userData);\n    console.log(\"Response from login API:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error in loginUser thunk:\", error.response.data);\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// Thunk pour récupérer les données utilisateur\nexport const fetchUserProfile = createAsyncThunk(\"auth/fetchUserProfile\", async (_, {\n  getState,\n  rejectWithValue\n}) => {\n  const {\n    token\n  } = getState().auth; // Get the token\n  console.log(\"Fetching user profile with token:\", token);\n  try {\n    const response = await axios.post(\"http://localhost:3001/api/v1/user/profile\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(\"Response from fetchUserProfile API:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error in fetchUserProfile thunk:\", error.response.data);\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// Thunk pour mettre à jour le profil utilisateur\nexport const updateUserProfile = createAsyncThunk(\"auth/updateUserProfile\", async (updatedData, {\n  getState,\n  rejectWithValue\n}) => {\n  const {\n    token\n  } = getState().auth; // Get the token\n  try {\n    const response = await axios.put(\"http://localhost:3001/api/v1/user/profile\", updatedData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data.body;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n// Initialization Store, Etat Initial\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    token: null,\n    status: \"idle\",\n    error: null\n  },\n  // Reducers de déconnexion \n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.status = \"idle\";\n      state.error = null;\n      console.log(\"User logged out. State reset to initial values.\");\n    }\n  },\n  // Gestion des différents STATE\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.status = \"loading\";\n      console.log(\"Login request pending...\");\n    })\n    // CAS Si connexion réussie\n    .addCase(loginUser.fulfilled, (state, action) => {\n      console.log(\"Full response payload:\", action.payload);\n      state.status = \"succeeded\";\n      // Vérifie que les données existent et sont bien structurées\n      if (action.payload.body) {\n        state.user = action.payload.body.user;\n        state.token = action.payload.body.token; // État du token\n        console.log(\"Login succeeded. User data:\", state.user);\n        console.log(\"Token received:\", state.token);\n      } else {\n        console.error(\"Unexpected response structure:\", action.payload);\n      }\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n      // Réinitialiser user et token en cas d'échec\n      state.user = null;\n      state.token = null;\n      console.error(\"Login failed with error:\", state.error);\n    })\n    // Gestion de l'état de la requête de récupération du profil utilisateur\n    .addCase(fetchUserProfile.pending, state => {\n      state.status = \"loading\";\n      console.log(\"Fetch user profile request pending...\");\n    }).addCase(fetchUserProfile.fulfilled, (state, action) => {\n      console.log(\"Full response payload from profile fetch:\", action.payload);\n      state.status = \"succeeded\";\n      // Vérifie que les données existent et sont bien structurées\n      if (action.payload.body) {\n        state.user = action.payload.body.user;\n        console.log(\"User profile fetched successfully. User data:\", state.user);\n      } else {\n        console.error(\"Unexpected response structure:\", action.payload);\n      }\n    }).addCase(fetchUserProfile.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n      console.error(\"Failed to fetch user profile with error:\", state.error);\n    }).addCase(updateUserProfile.fulfilled, (state, action) => {\n      // Mettre à jour les informations de l'utilisateur dans le state\n      state.user.firstName = action.payload.firstName;\n      state.user.lastName = action.payload.lastName;\n      state.status = \"succeeded\";\n    }).addCase(updateUserProfile.rejected, (state, action) => {\n      state.error = action.payload;\n      state.status = \"failed\";\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","loginUser","userData","rejectWithValue","console","log","response","post","data","error","fetchUserProfile","_","getState","token","auth","headers","Authorization","updateUserProfile","updatedData","put","body","authSlice","name","initialState","user","status","reducers","logout","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","firstName","lastName","actions","reducer"],"sources":["/Users/macbook/Documents/OpenClassRooms/Projet_13_Letot_Dagan/argentbank-front/src/Features/Auth/AuthSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Thunk pour la connexion utilisateur\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (userData, { rejectWithValue }) => {\n    console.log(\"User data sent to API:\", userData);\n    try {\n      const response = await axios.post(\n        \"http://localhost:3001/api/v1/user/login\",\n        userData\n      );\n      console.log(\"Response from login API:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error in loginUser thunk:\", error.response.data);\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\n// Thunk pour récupérer les données utilisateur\nexport const fetchUserProfile = createAsyncThunk(\n  \"auth/fetchUserProfile\",\n  async (_, { getState, rejectWithValue }) => {\n    const { token } = getState().auth; // Get the token\n    console.log(\"Fetching user profile with token:\", token);\n    try {\n      const response = await axios.post(\n        \"http://localhost:3001/api/v1/user/profile\",\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      console.log(\"Response from fetchUserProfile API:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error in fetchUserProfile thunk:\", error.response.data);\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\n// Thunk pour mettre à jour le profil utilisateur\nexport const updateUserProfile = createAsyncThunk(\n  \"auth/updateUserProfile\",\n  async (updatedData, { getState, rejectWithValue }) => {\n    const { token } = getState().auth; // Get the token\n    try {\n      const response = await axios.put(\n        \"http://localhost:3001/api/v1/user/profile\",\n        updatedData,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      return response.data.body;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n// Initialization Store, Etat Initial\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    token: null,\n    status: \"idle\",\n    error: null,\n  },\n// Reducers de déconnexion \n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.status = \"idle\";\n      state.error = null;\n      console.log(\"User logged out. State reset to initial values.\");\n    },\n  },\n  // Gestion des différents STATE\n  extraReducers: (builder) => {\n    builder\n      .addCase(loginUser.pending, (state) => {\n        state.status = \"loading\";\n        console.log(\"Login request pending...\");\n      })\n      // CAS Si connexion réussie\n      .addCase(loginUser.fulfilled, (state, action) => {\n        console.log(\"Full response payload:\", action.payload);\n        state.status = \"succeeded\";\n        // Vérifie que les données existent et sont bien structurées\n        if (action.payload.body) {\n          state.user = action.payload.body.user;\n          state.token = action.payload.body.token; // État du token\n          console.log(\"Login succeeded. User data:\", state.user);\n          console.log(\"Token received:\", state.token);\n        } else {\n          console.error(\"Unexpected response structure:\", action.payload);\n        }\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.payload;\n        // Réinitialiser user et token en cas d'échec\n        state.user = null;\n        state.token = null;\n        console.error(\"Login failed with error:\", state.error);\n      })\n      // Gestion de l'état de la requête de récupération du profil utilisateur\n      .addCase(fetchUserProfile.pending, (state) => {\n        state.status = \"loading\";\n        console.log(\"Fetch user profile request pending...\");\n      })\n      .addCase(fetchUserProfile.fulfilled, (state, action) => {\n        console.log(\n          \"Full response payload from profile fetch:\",\n          action.payload\n        );\n        state.status = \"succeeded\";\n        // Vérifie que les données existent et sont bien structurées\n        if (action.payload.body) {\n          state.user = action.payload.body.user;\n          console.log(\n            \"User profile fetched successfully. User data:\",\n            state.user\n          );\n        } else {\n          console.error(\"Unexpected response structure:\", action.payload);\n        }\n      })\n      .addCase(fetchUserProfile.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.payload;\n        console.error(\"Failed to fetch user profile with error:\", state.error);\n      })\n      .addCase(updateUserProfile.fulfilled, (state, action) => {\n        // Mettre à jour les informations de l'utilisateur dans le state\n        state.user.firstName = action.payload.firstName;\n        state.user.lastName = action.payload.lastName;\n        state.status = \"succeeded\";\n      })\n      .addCase(updateUserProfile.rejected, (state, action) => {\n        state.error = action.payload;\n        state.status = \"failed\";\n      });\n  },\n});\n\nexport const { logout } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}