{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const loginUser = createAsyncThunk('auth/loginUser', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post('http://localhost:3001/api/v1/user/login', userData);\n    console.log('Response from login API:', response.data); // Affiche la réponse complète de l'API\n    return response.data;\n  } catch (error) {\n    console.error('Error in loginUser thunk:', error.response.data); // Affiche les détails de l'erreur\n    return rejectWithValue(error.response.data);\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    token: null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.status = 'idle';\n      state.error = null;\n      console.log('User logged out. State reset to initial values.');\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.status = 'loading';\n      console.log('Login request pending...');\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      console.log('Login succeeded. User data:', state.user); // Affiche les données de l'utilisateur\n      console.log('Token received:', state.token); // Affiche le token\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n      console.error('Login failed with error:', state.error); // Affiche les détails de l'erreur\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","loginUser","userData","rejectWithValue","response","post","console","log","data","error","authSlice","name","initialState","user","token","status","reducers","logout","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/macbook/Documents/OpenClassRooms/Projet_13_Letot_Dagan/argentbank-front/src/Features/Auth/AuthSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const loginUser = createAsyncThunk(\n  'auth/loginUser',\n  async (userData, { rejectWithValue }) => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/v1/user/login', userData);\n      console.log('Response from login API:', response.data); // Affiche la réponse complète de l'API\n      return response.data;\n    } catch (error) {\n      console.error('Error in loginUser thunk:', error.response.data); // Affiche les détails de l'erreur\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    token: null,\n    status: 'idle',\n    error: null,\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.status = 'idle';\n      state.error = null;\n      console.log('User logged out. State reset to initial values.');\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loginUser.pending, (state) => {\n        state.status = 'loading';\n        console.log('Login request pending...');\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        console.log('Login succeeded. User data:', state.user); // Affiche les données de l'utilisateur\n        console.log('Token received:', state.token); // Affiche le token\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n        console.error('Login failed with error:', state.error); // Affiche les détails de l'erreur\n      });\n  },\n});\n\nexport const { logout } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CACvC,gBAAgB,EAChB,OAAOG,QAAQ,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,yCAAyC,EAAEH,QAAQ,CAAC;IACtFI,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;IACxD,OAAOJ,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACL,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;IACjE,OAAOL,eAAe,CAACM,KAAK,CAACL,QAAQ,CAACI,IAAI,CAAC;EAC7C;AACF,CACF,CAAC;AAED,MAAME,SAAS,GAAGZ,WAAW,CAAC;EAC5Ba,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,MAAM;IACdN,KAAK,EAAE;EACT,CAAC;EACDO,QAAQ,EAAE;IACRC,MAAMA,CAACC,KAAK,EAAE;MACZA,KAAK,CAACL,IAAI,GAAG,IAAI;MACjBK,KAAK,CAACJ,KAAK,GAAG,IAAI;MAClBI,KAAK,CAACH,MAAM,GAAG,MAAM;MACrBG,KAAK,CAACT,KAAK,GAAG,IAAI;MAClBH,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;IAChE;EACF,CAAC;EACDY,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACpB,SAAS,CAACqB,OAAO,EAAGJ,KAAK,IAAK;MACrCA,KAAK,CAACH,MAAM,GAAG,SAAS;MACxBT,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACzC,CAAC,CAAC,CACDc,OAAO,CAACpB,SAAS,CAACsB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC/CN,KAAK,CAACH,MAAM,GAAG,WAAW;MAC1BG,KAAK,CAACL,IAAI,GAAGW,MAAM,CAACC,OAAO,CAACZ,IAAI;MAChCK,KAAK,CAACJ,KAAK,GAAGU,MAAM,CAACC,OAAO,CAACX,KAAK;MAClCR,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEW,KAAK,CAACL,IAAI,CAAC,CAAC,CAAC;MACxDP,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEW,KAAK,CAACJ,KAAK,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC,CACDO,OAAO,CAACpB,SAAS,CAACyB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MAC9CN,KAAK,CAACH,MAAM,GAAG,QAAQ;MACvBG,KAAK,CAACT,KAAK,GAAGe,MAAM,CAACC,OAAO;MAC5BnB,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAES,KAAK,CAACT,KAAK,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEQ;AAAO,CAAC,GAAGP,SAAS,CAACiB,OAAO;AAC3C,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}